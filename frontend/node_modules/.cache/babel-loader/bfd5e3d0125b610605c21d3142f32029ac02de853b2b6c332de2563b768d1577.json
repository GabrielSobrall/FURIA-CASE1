{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\FURIA-CASE1-1\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// Estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  width: 300px;\n  font-size: 16px;\n`;\n_c = Input;\nconst Botao = styled.button`\n  padding: 10px 20px;\n  margin-left: 10px;\n  background-color: #0077cc;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #005fa3;\n  }\n`;\n_c2 = Botao;\nconst Mensagem = styled.div`\n  margin-top: 20px;\n  font-size: 18px;\n`;\n_c3 = Mensagem;\nfunction Home() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const nick = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.nick) || \"Visitante\"; // pega o nick ou \"Visitante\" se não tiver\n\n  const [mensagem, setMensagem] = useState(\"\"); // controla o que o usuário digita\n  const [mensagens, setMensagens] = useState([]); // armazena todas as mensagens enviadas\n\n  function handleInputChange(event) {\n    setMensagem(event.target.value);\n  }\n  function enviarMensagem() {\n    if (mensagem.trim() !== \"\") {\n      // só envia se tiver algo\n      setMensagens([...mensagens, `${nick}: ${mensagem}`]);\n      setMensagem(\"\"); // limpa o campo\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Bem-vindo, \", nick, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Digite sua mensagem\",\n        value: mensagem,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Botao, {\n        onClick: enviarMensagem,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mensagem, {\n      children: mensagens.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"IidMCVhUL86J+eGwoyAiiKCvaU0=\", false, function () {\n  return [useLocation];\n});\n_c4 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Botao\");\n$RefreshReg$(_c3, \"Mensagem\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"names":["useState","useLocation","styled","jsxDEV","_jsxDEV","Input","input","_c","Botao","button","_c2","Mensagem","div","_c3","Home","_s","_location$state","location","nick","state","mensagem","setMensagem","mensagens","setMensagens","handleInputChange","event","target","value","enviarMensagem","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","msg","index","_c4","$RefreshReg$"],"sources":["C:/Users/Gabri/OneDrive/Área de Trabalho/FURIA-CASE1-1/frontend/src/pages/Home.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// Estilos\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  width: 300px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Botao = styled.button`\r\n  padding: 10px 20px;\r\n  margin-left: 10px;\r\n  background-color: #0077cc;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n\r\n  &:hover {\r\n    background-color: #005fa3;\r\n  }\r\n`;\r\n\r\nconst Mensagem = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 18px;\r\n`;\r\n\r\nfunction Home() {\r\n  const location = useLocation();\r\n  const nick = location.state?.nick || \"Visitante\"; // pega o nick ou \"Visitante\" se não tiver\r\n\r\n  const [mensagem, setMensagem] = useState(\"\"); // controla o que o usuário digita\r\n  const [mensagens, setMensagens] = useState([]); // armazena todas as mensagens enviadas\r\n\r\n  function handleInputChange(event) {\r\n    setMensagem(event.target.value);\r\n  }\r\n\r\n  function enviarMensagem() {\r\n    if (mensagem.trim() !== \"\") { // só envia se tiver algo\r\n      setMensagens([...mensagens, `${nick}: ${mensagem}`]);\r\n      setMensagem(\"\"); // limpa o campo\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bem-vindo, {nick}!</h1>\r\n\r\n      <div>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Digite sua mensagem\"\r\n          value={mensagem}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Botao onClick={enviarMensagem}>Enviar</Botao>\r\n      </div>\r\n\r\n      {/* Área para mostrar as mensagens enviadas */}\r\n      <Mensagem>\r\n        {mensagens.map((msg, index) => (\r\n          <div key={index}>{msg}</div>\r\n        ))}\r\n      </Mensagem>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}